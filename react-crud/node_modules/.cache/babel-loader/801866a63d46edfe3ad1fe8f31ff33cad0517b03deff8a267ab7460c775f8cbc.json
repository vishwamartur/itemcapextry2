{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmarturx\\\\Music\\\\react-crud\\\\src\\\\components\\\\AvailabilityPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ItemList from './ItemList'; // Assuming ItemList is in a sibling directory\n\n// Import any other necessary components or libraries here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AvailabilityPage() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [filters, setFilters] = useState({/* Initial filter values */});\n  useEffect(() => {\n    // Fetch data from backend or other sources, applying filters if needed\n    fetch('/api/items', {/* Add query parameters based on filters */}).then(response => response.json()).then(data => setItems(data));\n  }, [filters]);\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"availability-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Item Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n      items: items /* Pass necessary props for item display and interactions */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(AvailabilityPage, \"nJ0M6Q/CSGA1eLbXkX1a+HRm6SM=\");\n_c = AvailabilityPage;\nexport default AvailabilityPage;\nvar _c;\n$RefreshReg$(_c, \"AvailabilityPage\");","map":{"version":3,"names":["React","useState","useEffect","ItemList","jsxDEV","_jsxDEV","AvailabilityPage","_s","items","setItems","filters","setFilters","fetch","then","response","json","data","handleFilterChange","newFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vmarturx/Music/react-crud/src/components/AvailabilityPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ItemList from './ItemList'; // Assuming ItemList is in a sibling directory\r\n\r\n// Import any other necessary components or libraries here\r\n\r\nfunction AvailabilityPage() {\r\n  const [items, setItems] = useState([]);\r\n  const [filters, setFilters] = useState({ /* Initial filter values */ });\r\n\r\n  useEffect(() => {\r\n    // Fetch data from backend or other sources, applying filters if needed\r\n    fetch('/api/items', { /* Add query parameters based on filters */ })\r\n      .then(response => response.json())\r\n      .then(data => setItems(data));\r\n  }, [filters]);\r\n\r\n  const handleFilterChange = (newFilters) => {\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  return (\r\n    <div className=\"availability-page\">\r\n      <h1>Item Availability</h1>\r\n      {/* Add filtering options if applicable */}\r\n      <ItemList items={items} /* Pass necessary props for item display and interactions */ />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AvailabilityPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAE,4BAA6B,CAAC;EAEvEC,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAC,YAAY,EAAE,CAAE,4CAA6C,CAAC,CACjEC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAAC,CAAC;EACjC,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,MAAMO,kBAAkB,GAAIC,UAAU,IAAK;IACzCP,UAAU,CAACO,UAAU,CAAC;EACxB,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1BnB,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM,CAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA8D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEV;AAACjB,EAAA,CAtBQD,gBAAgB;AAAAmB,EAAA,GAAhBnB,gBAAgB;AAwBzB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}