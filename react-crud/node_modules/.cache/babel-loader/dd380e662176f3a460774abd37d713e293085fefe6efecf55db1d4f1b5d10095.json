{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmarturx\\\\Music\\\\react-crud\\\\src\\\\components\\\\AvailabilityPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ItemList, FilterBar } from './components'; // Import necessary components from the components folder\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AvailabilityPage() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [filters, setFilters] = useState({\n    // Initial filter values\n    name: '',\n    // Filter by item name\n    location: '',\n    // Filter by item location\n    available: true // Filter by item availability\n  });\n  useEffect(() => {\n    // Fetch data from backend or other sources, applying filters if needed\n    fetch('/api/items', {\n      // Add query parameters based on filters\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(filters)\n    }).then(response => response.json()).then(data => setItems(data));\n  }, [filters]);\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"availability-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Item Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      filters: filters,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n      items: items /* Pass necessary props for item display and interactions */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(AvailabilityPage, \"Sn5/8w2dnhaYhTcHENlGH48tkkI=\");\n_c = AvailabilityPage;\nexport default AvailabilityPage;\nvar _c;\n$RefreshReg$(_c, \"AvailabilityPage\");","map":{"version":3,"names":["React","useState","useEffect","ItemList","FilterBar","jsxDEV","_jsxDEV","AvailabilityPage","_s","items","setItems","filters","setFilters","name","location","available","fetch","method","headers","body","JSON","stringify","then","response","json","data","handleFilterChange","newFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","_c","$RefreshReg$"],"sources":["C:/Users/vmarturx/Music/react-crud/src/components/AvailabilityPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ItemList, FilterBar } from './components'; // Import necessary components from the components folder\r\n\r\nfunction AvailabilityPage() {\r\n  const [items, setItems] = useState([]);\r\n  const [filters, setFilters] = useState({ // Initial filter values\r\n    name: '', // Filter by item name\r\n    location: '', // Filter by item location\r\n    available: true // Filter by item availability\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch data from backend or other sources, applying filters if needed\r\n    fetch('/api/items', { // Add query parameters based on filters\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(filters)\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => setItems(data));\r\n  }, [filters]);\r\n\r\n  const handleFilterChange = (newFilters) => {\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  return (\r\n    <div className=\"availability-page\">\r\n      <h1>Item Availability</h1>\r\n      {/* Add filtering options if applicable */}\r\n      <FilterBar filters={filters} onFilterChange={handleFilterChange} />\r\n      <ItemList items={items} /* Pass necessary props for item display and interactions */ />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AvailabilityPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC;IAAE;IACvCY,IAAI,EAAE,EAAE;IAAE;IACVC,QAAQ,EAAE,EAAE;IAAE;IACdC,SAAS,EAAE,IAAI,CAAC;EAClB,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACd;IACAc,KAAK,CAAC,YAAY,EAAE;MAAE;MACpBC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,OAAO;IAC9B,CAAC,CAAC,CACCW,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIf,QAAQ,CAACe,IAAI,CAAC,CAAC;EACjC,CAAC,EAAE,CAACd,OAAO,CAAC,CAAC;EAEb,MAAMe,kBAAkB,GAAIC,UAAU,IAAK;IACzCf,UAAU,CAACe,UAAU,CAAC;EACxB,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCvB,OAAA;MAAAuB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1B3B,OAAA,CAACF,SAAS;MAACO,OAAO,EAAEA,OAAQ;MAACuB,cAAc,EAAER;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnE3B,OAAA,CAACH,QAAQ;MAACM,KAAK,EAAEA,KAAM,CAAC;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA8D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEV;AAACzB,EAAA,CAjCQD,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAmCzB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}